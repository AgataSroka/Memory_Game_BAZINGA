{"version":3,"sources":["components/App/App.js","components/GameOver/GameOver.js","index.js"],"names":["App","Component","className","style","color","id","sessionStorage","getItem","ReactDOM","render","document","getElementById","cardView","cards","querySelectorAll","console","log","display","startTime","Date","getTime","count","activeCard","activeCards","gameLength","length","gameResult","clickCard","this","classList","remove","forEach","card","removeEventListener","innerHTML","setTimeout","add","filter","contains","gameTime","setItem","toFixed","addEventListener","position","Math","floor","random","splice","time","timer","time_down"],"mappings":"kOA0DeA,G,YCtDQC,Y,iLDEf,OACI,yBAAKC,UAAU,OACX,yCACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,YAAYC,MAAO,CAACC,MAAO,WAA1C,cACe,0BAAMC,GAAG,WAExB,yBAAKH,UAAU,YAAYC,MAAO,CAACC,MAAO,SAA1C,uBACwB,kCAAQE,eAAeC,QAAQ,aAA/B,OAExB,yBAAKL,UAAU,YAAYC,MAAO,CAACC,MAAO,UAA1C,UACW,0BAAMC,GAAG,iBAAT,QAGf,6BAASH,UAAU,SACf,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,sC,GAtCVD,cEAlBO,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SAEhD,IAAMC,EAAW,CAAC,MAAO,MAAO,SAAU,SAAU,cAAe,cAAe,OAAQ,OAAQ,OAAQ,OACtG,SAAU,SAAU,SAAU,SAAU,aAAc,aAAc,OAAQ,OAAQ,YAAa,aAEjGC,EAAK,YAAOH,SAASI,iBAAiB,iBAC1CC,QAAQC,IAAIH,GAEZ,IAAII,EAAUP,SAASC,eAAe,iBACtCI,QAAQC,IAAIC,GAEZ,IAAMC,GAAY,IAAIC,MAAOC,UACzBC,EAAQ,EACRC,EAAa,GACXC,EAAc,GAEdC,EAAaX,EAAMY,OAAS,EAC9BC,EAAa,EAEXC,EAAY,SAAZA,KACFL,EAAaM,QAEML,EAAY,KAE/BD,EAAWO,UAAUC,OAAO,UAGD,IAAvBP,EAAYE,QACZV,QAAQC,IAAI,cACZK,IACAE,EAAY,GAAKD,IAGjBP,QAAQC,IAAI,eACZK,IACAR,EAAMkB,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,oBAAoB,QAASN,MACxDV,EAAQiB,UAAYb,EAAM,EAC1BE,EAAY,GAAKD,EAGnBa,YAAW,WAEL,GAAIZ,EAAY,GAAGrB,YAAcqB,EAAY,GAAGrB,WAO5C,GANAa,QAAQC,IAAI,UACZO,EAAYQ,SAAQ,SAAAC,GAAI,OAAIA,EAAKH,UAAUO,IAAI,UAC/CV,IACAb,EAAQA,EAAMwB,QAAO,SAAAL,GAAI,OAAKA,EAAKH,UAAUS,SAAS,UAGlDZ,IAAeF,EAAY,CAE3B,IACMe,IADU,IAAIpB,MAAOC,UACCF,GAAa,IAEzCZ,eAAekC,QAAQ,YAAvB,UAAsCD,EAASE,QAAQ,GAAvD,YAIJ1B,QAAQC,IAAI,SACZO,EAAYQ,SAAQ,SAAAC,GAAI,OAAIA,EAAKH,UAAUO,IAAI,aAEnDd,EAAa,GACbC,EAAYE,OAAS,EACrBZ,EAAMkB,SAAQ,SAAAC,GAAI,OAAIA,EAAKU,iBAAiB,QAASf,QACtD,QAKPd,EAAMkB,SAAQ,SAAAC,GACV,IAAMW,EAAWC,KAAKC,MAAMD,KAAKE,SAAWlC,EAASa,QACrDO,EAAKH,UAAUO,IAAIxB,EAAS+B,IAC5B/B,EAASmC,OAAOJ,EAAU,MAG9BR,YAAW,WACPtB,EAAMkB,SAAQ,SAAAC,GACVA,EAAKH,UAAUO,IAAI,UACnBJ,EAAKU,iBAAiB,QAASf,QAEpC,KAIPQ,YAAW,WACX,IAAIa,EAAO,KACO,SAASC,IACR,MAATD,GACNb,YAAW,WACPzB,SAASC,eAAe,SAASuB,UAAYc,EAAM,IACnDC,MACD,KAGPC,KAEG,M","file":"static/js/main.aedc4f30.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../../styles/App.scss';\nimport GameOver from \"../GameOver/GameOver\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <h1> Bazinga </h1>\n                <div className='container'>\n                    <div className='settings'>\n                        <div className='main_settings'>\n                            <div className='main_info' style={{color: 'yellow'}} >\n                                Time left: <span id='timer' ></span>\n                            </div>\n                            <div className='main_info' style={{color: 'blue'}}>\n                                Previous game time: <span> {sessionStorage.getItem(\"game_time\")}  </span>\n                            </div>\n                            <div className='main_info' style={{color: 'green'}}>\n                                Flips: <span id='display_count'>  </span>\n                            </div>\n                        </div>\n                        <section className='cards'>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </section>\n                    </div>\n                    {/*<div className='game_over_text'>*/}\n                    {/*    <h2> Congratulations! <br/> You are the best! </h2>*/}\n                    {/*    <h3> Time of your game {sessionStorage.getItem(\"game_time\")} </h3>*/}\n                    {/*    <button> Click to run new game! </button>*/}\n                    {/*</div>*/}\n                   </div>\n            </div>\n\n        )\n\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport '../../styles/GameOver.scss';\n\n\nclass GameOver extends Component {\n\n    render() {\n        return (\n        <section>\n            <div className='game_over_text game_over_text2'>\n                <h2> Congratulations! <br/> You are the best! </h2>\n                <h3> Time of your game {sessionStorage.getItem(\"game_time\")} </h3>\n                <button> Click to run new game! </button>\n            </div>\n        </section>\n        )\n    }\n}\nexport default GameOver","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nconst cardView = ['red', 'red', 'yellow', 'yellow', 'yellowgreen', 'yellowgreen', 'blue', 'blue', 'pink', 'pink',\n    'violet', 'violet', 'orange', 'orange', 'darkviolet', 'darkviolet', 'grey', 'grey', 'turquoise', 'turquoise'];\n\nlet cards = [...document.querySelectorAll('.cards > div')];\nconsole.log(cards);\n\nlet display = document.getElementById('display_count');\nconsole.log(display);\n\nconst startTime = new Date().getTime();\nlet count = 0;\nlet activeCard = '';\nconst activeCards = [];\n\nconst gameLength = cards.length / 2;\nlet gameResult = 0;\n\nconst clickCard = function () {\n    activeCard = this;\n\n    if (activeCard === activeCards[0])\n        return;\n    activeCard.classList.remove('hidden');\n\n\n    if (activeCards.length === 0) {\n        console.log('first card');\n        count++;\n        activeCards[0] = activeCard;\n\n    } else {\n        console.log('second card');\n        count++;\n        cards.forEach(card => card.removeEventListener('click', clickCard));\n        display.innerHTML = count/2;\n        activeCards[1] = activeCard;\n\n\n      setTimeout(function () {\n\n            if (activeCards[0].className === activeCards[1].className) {\n                console.log('winner');\n                activeCards.forEach(card => card.classList.add('off'));\n                gameResult++;\n                cards = cards.filter(card => !card.classList.contains('off'));\n\n\n                if (gameResult === gameLength) {\n\n                    const endTime = new Date().getTime();\n                    const gameTime = (endTime - startTime) / 1000;\n                    // alert(`Congratulations! Time of your game: ${gameTime.toFixed(0)} s`);\n                    sessionStorage.setItem(\"game_time\",`${gameTime.toFixed(0)}s`);\n\n                }\n            } else {\n                console.log('loser');\n                activeCards.forEach(card => card.classList.add('hidden'))\n            }\n            activeCard = '';\n            activeCards.length = 0;\n            cards.forEach(card => card.addEventListener('click', clickCard));\n        }, 1000)\n    }\n};\n\nconst start = function () {\n    cards.forEach(card => {\n        const position = Math.floor(Math.random() * cardView.length);\n        card.classList.add(cardView[position]);\n        cardView.splice(position, 1)\n    });\n\n    setTimeout(function () {\n        cards.forEach(card => {\n            card.classList.add('hidden');\n            card.addEventListener('click', clickCard)\n        })\n    }, 3000)\n};\nstart();\n\nsetTimeout(function () {\nlet time = 100;\nconst time_down = function timer(){\n    if (--time === 0) return;\n    setTimeout(function () {\n        document.getElementById('timer').innerHTML = time +'s';\n        timer()\n    }, 1000)\n};\n\ntime_down();\n\n}, 3000);\n\n\n// let game_over = document.getElementsByClassName('game_over_text');\n// console.log(game_over);\n//\n// let exit = function () {\n//     if(time === 1){\n//         alert('test')\n//     }\n//\n// };\n// exit();\n\n\n\n"],"sourceRoot":""}